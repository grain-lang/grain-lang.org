---
import { Icon } from "astro-icon/components";
import DesktopIcon from "./icons/DesktopIcon.astro";
import SunIcon from "./icons/SunIcon.astro";
import MoonIcon from "./icons/MoonIcon.astro";
---

<!-- function ThemeToggle() {
  let [open, setOpen] = useState(false);
  let [theme, setTheme] = useTheme();
  let [prefersDark, setPrefersDark] = useState();

  useEffect(() => {
    setPrefersDark(window.matchMedia("(prefers-color-scheme: dark)").matches);
  }, []);

  let icon;
  if (theme === "dark" || (theme === "system" && prefersDark)) {
    icon = (
      <MoonIcon
        class={`w-6 h-6 lg:w-5 lg:h-5 stroke-gray-30 dark:stroke-gray-50 hover:stroke-gray-40 ${
          theme !== "system"
            ? "stroke-purple-50 dark:stroke-purple-30 hover:stroke-purple-50 dark:hover:stroke-purple-20"
            : ""
        }`}
      />
    );
  } else {
    icon = (
      <SunIcon
        class={`w-6 h-6 lg:w-5 lg:h-5 stroke-gray-30 dark:stroke-gray-50 hover:stroke-gray-40 ${
          theme !== "system"
            ? "stroke-purple-50 dark:stroke-purple-30 hover:stroke-purple-50 dark:hover:stroke-purple-20"
            : ""
        }`}
      />
    );
  }

  function applyTheme(theme) {
    setOpen(false);
    setTheme(theme);
  } -->

<script>
  import { selectedTheme, type Theme } from "../store";

  const buttons: Record<Theme, HTMLElement> = {
    "dark": document.getElementById("select-dark")!,
    "light": document.getElementById("select-light")!,
    "system": document.getElementById("select-system")!,
  };

  const icons: Record<Theme, HTMLElement> = {
    "dark": document.getElementById("dark-icon")!,
    "light": document.getElementById("light-icon")!,
    "system": document.getElementById("system-icon")!,
  };

  const selectedButtonClasses = "text-purple-50 dark:text-purple-30";
  const unselectedButtonClasses = "text-gray-60 dark:text-gray-50";
  const selectedIconClasses = "stroke-purple-50 dark:stroke-purple-30";

  selectedTheme.subscribe((theme: Theme, prevTheme: Theme | undefined) => {
    buttons[theme].classList.remove(unselectedButtonClasses);
    buttons[theme].classList.add(selectedButtonClasses);
    icons[theme].classList.add(selectedIconClasses);

    if (prevTheme) {
      buttons[prevTheme].classList.remove(selectedButtonClasses);
      buttons[prevTheme].classList.add(unselectedButtonClasses);
      icons[prevTheme].classList.remove(selectedIconClasses);
    }
  })

  const handleSetTheme = (theme: Theme) => () => {
    if (["light", "dark"].includes(theme)) {
      localStorage.setItem("theme", theme);
    } else {
      localStorage.removeItem("theme");
    }

    // if (theme == "dark") {
    //   document.documentElement.classList.add("dark");
    // } else {
    //   document.documentElement.classList.remove("dark");
    // }
    selectedTheme.set(theme);
  }

  Object.entries(buttons).forEach(([theme, button]) => button.addEventListener("click", handleSetTheme(theme as Theme)))
</script>

<div class="my-auto relative">
  <a role="button" onClick={() => setOpen(!open)}>
  if (theme === "dark" || (theme === "system" && prefersDark)) {
    icon = (
      <MoonIcon
        class={`w-6 h-6 lg:w-5 lg:h-5 stroke-gray-30 dark:stroke-gray-50 hover:stroke-gray-40 ${
          theme !== "system"
            ? "stroke-purple-50 dark:stroke-purple-30 hover:stroke-purple-50 dark:hover:stroke-purple-20"
            : ""
        }`}
      />
    );
  } else {
    icon = (
      <SunIcon
        class={`w-6 h-6 lg:w-5 lg:h-5 stroke-gray-30 dark:stroke-gray-50 hover:stroke-gray-40 ${
          theme !== "system"
            ? "stroke-purple-50 dark:stroke-purple-30 hover:stroke-purple-50 dark:hover:stroke-purple-20"
            : ""
        }`}
      />
    );
  }
  </a>
  <div
    class={`${
      open ? "absolute" : "hidden"
    } w-36 -right-4 top-12 p-2 shadow rounded border border-gray-20 dark:border-purple-70 bg-white dark:bg-purple-90 z-50`}
  >
    <ul>
      <li>
        <a
          role="button"
          id="select-light"
          class="flex items-center font-medium hover:bg-gray-10 dark:hover:bg-purple-80 p-2 rounded"
        >
          <SunIcon
            id="light-icon"
            class={`h-5 w-5 stroke-gray-50 mr-3`}
          />
          Light
        </a>
      </li>
      <li>
        <a
          role="button"
          id="select-dark"
          class="flex items-center font-medium hover:bg-gray-10 dark:hover:bg-purple-80 p-2 rounded"
        >
          <MoonIcon
            id="dark-icon"
            class={`h-5 w-5 stroke-gray-50 mr-3`}
          />
          Dark
        </a>
      </li>
      <li>
        <a
          role="button"
          id="select-system"
          class="flex items-center font-medium hover:bg-gray-10 dark:hover:bg-purple-80 p-2 rounded"
        >
          <DesktopIcon
            id="system-icon"
            class={`h-5 w-5 stroke-gray-50 mr-3`}
          />
          System
        </a>
      </li>
    </ul>
  </div>
</div>